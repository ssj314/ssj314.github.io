[ { "title": "생성 모델", "url": "/posts/%EC%83%9D%EC%84%B1-%EB%AA%A8%EB%8D%B8/", "categories": "Deep Learning, Generative Model", "tags": "PyTorch, GAN", "date": "2024-03-26 00:00:00 +0900", "snippet": "기존 딥러닝 모델은 데이터를 학습하여 정답을 찾는 것이었다. 그러나, 생성 모델은 데이터를 판별하는 것에 그치지 않는다. 입력 데이터의 분포를 파악하여 유사한 데이터를 생성해 낼 수 있다. 최근엔 엄청나게 많은 데이터를 학습하는 것이 추세이므로 생성 모델을 이용해 입력 데이터를 생성해 내기도 한다.생성 모델의 구조신경망처럼 분류 혹은 회귀 모델은 판별...", "content": "기존 딥러닝 모델은 데이터를 학습하여 정답을 찾는 것이었다. 그러나, 생성 모델은 데이터를 판별하는 것에 그치지 않는다. 입력 데이터의 분포를 파악하여 유사한 데이터를 생성해 낼 수 있다. 최근엔 엄청나게 많은 데이터를 학습하는 것이 추세이므로 생성 모델을 이용해 입력 데이터를 생성해 내기도 한다.생성 모델의 구조신경망처럼 분류 혹은 회귀 모델은 판별자 모델이라고 한다. 생성 모델에는 판별자뿐 아니라 기존 데이터의 특성을 추출해 새로운 조합을 만드는 생성자 모델이 있다.생성 모델의 유형기존 데이터의 특성을 추출하는 방식에 따라 명시적 방법과 암시적 방법으로 분류한다. 명시적 방법의 대표적인 예시는 변형 오토인코더(VAE)로, 확률 변수 $p(x)$를 정의한다. 반면, 암시적 방법에 해당하는 적대적 생성 모델(GAN)은 확률 변수를 직접 정의하지 않고 오로지 신경망의 학습을 통해 컴퓨터가 알아서 정한다.Figure 1. 적대적 생성 모델과 변형 오토인코더적대적 생성 모델 (GAN)생성 모델은 판별자와 생성자로 구성된다. 생성자는 새로운 데이터를 계속 생성하고 판별자는 이것과 실제 데이터를 비교하여 어느게 진짜인지 판별한다. 생성자는 판별자가 가짜 데이터를 구분하지 못 하도록 훈련하고, 판별자는 실제 데이터를 진짜로 판단하도록 훈련한다.Figure 2. GAN의 학습 과정GAN의 동작 원리판별자의 역할을 먼저 살펴보자. 판별자는 주어진 입력 이미지 $x$에 대해 진짜일 확률 $D(x)$를 반환한다. 반면 생성자는 처음에는 노이즈 $z$를 이용해 가짜 데이터 $G(z)$를 생성해 낸다.GAN의 손실함수$D(x)$는 실제 데이터를 진짜로 판단할 확률이고, $D(G(x))$는 가짜 데이터를 진짜로 판단할 확률이다. 따라서, 판별자의 입장에서는 진짜는 진짜로, 가짜는 가짜로 판별할 수록 성능이 좋은 것이다.\\(\\max_D \\; \\log D(x)+\\log (1-D(G(z)))\\)반대로, 생성자는 판별자가 자신이 만든 데이터를 진짜라고 오인할 수록 성능이 좋다.\\(\\min_D \\; \\log (1 - D(G(z)))\\)GAN 구현 (w. PyTorch)" }, { "title": "Quadratic form", "url": "/posts/Quadratic-form/", "categories": "볼록최적화입문, Chapter 3", "tags": "Convex Optimization, Linear Algebra", "date": "2024-03-22 00:00:00 +0900", "snippet": "지난 게시물에서 벡터 공간과 고유 벡터에 대해서 배웠다. 이번 포스팅에서는 Quadratic form(이차 형식)에 대해서 알아볼 것이다.Quadratic Form이란?선형 대수학에서 이차 항만 존재하는 다항식을 Quadratic Form이라 한다. $x \\in \\mathbb{R}$일 때, 함수 $f(x) = ax^2$는 대표적인 이차 형식이다.이차 ...", "content": "지난 게시물에서 벡터 공간과 고유 벡터에 대해서 배웠다. 이번 포스팅에서는 Quadratic form(이차 형식)에 대해서 알아볼 것이다.Quadratic Form이란?선형 대수학에서 이차 항만 존재하는 다항식을 Quadratic Form이라 한다. $x \\in \\mathbb{R}$일 때, 함수 $f(x) = ax^2$는 대표적인 이차 형식이다.이차 형식을 벡터 차원으로 확장할 수 있다. $x \\in \\mathbb{R}^n$인 벡터에 대해 이차 형식은 다음과 같이 정의한다.\\[f(x)=x^TAx\\]이 때, 행렬 $A$는 Symmetric이다. 왜 대칭 행렬을 쓰는 지는 뒤에서 배우겠다.예시 1벡터 $x=(x_1, x_2)$와 행렬 \\(A=\\begin{bmatrix} 4 &amp; 0 \\\\ 0 &amp; 3\\end{bmatrix}\\)를 가정해 보자. 그러면,\\[x^TAx=\\begin{bmatrix} x_1 &amp; x_2 \\end{bmatrix}\\begin{bmatrix} 4 &amp; 0 \\\\ 0 &amp; 3 \\end{bmatrix}\\begin{bmatrix} x_1 \\\\ x_2 \\end{bmatrix} =\\begin{bmatrix} x_1 &amp; x_2 \\end{bmatrix}\\begin{bmatrix} 4x_1 \\\\ 3x_2 \\end{bmatrix}\\]따라서, $f(x) = 4x_1^2+3x_2^2$이다.예시 2행렬 \\(A=I=\\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; 1\\end{bmatrix}\\)를 가정해 보자. 그러면, $f(x)=x^Tx= ||x||^2$이다. 따라서, Norm도 Convex Function임을 알 수 있다.대칭 행렬을 쓰는 이유이차 형식에서 대칭 행렬만 쓰는 이유는 대칭이 아닌 행렬은 결국 대칭 행렬로 바꾸어 표현할 수 있기 때문이다. 어떤 이차 형식에서 행렬 $A$가 대칭이 아니라고 가정해 보자. 이차 형식의 값은 스칼라이므로 $f(x)=f(x)^T$가 성립한다. 따라서,\\[\\begin{align}f(x) &amp;= x^TAx=f(x)^T=x^TA^Tx \\\\ \\\\f(x) &amp;= \\frac{x^TAx}{2} + \\frac{x^TAx}{2} = \\frac{x^TAx}{2} + \\frac{x^TA^Tx}{2} = x^T \\frac{(A^T + A)}{2} x \\end{align}\\]따라서, 이차 형식 $f(x)$는 \\(Q=\\frac{(A^T + A)}{2}\\)인 대칭 행렬로 바꾸어 표현할 수 있다. 그렇기에 굳이 비대칭 행렬을 쓸 필요가 없는 것이다.다양한 형태의 이차 형식이차 형식은 크게 3가지 종류로 분류할 수 있다. 한 점으로 모이는 형태 한 쪽으로 무한히 뻗어나가는 형태 위 아래로 무한히 발산하는 형태Figure 1. 다양한 형태의 이차 형식행렬의 부호에 따라 세 가지 형태로 분류되는데 다음 게시물에서 행렬의 부호를 구분하는 방법을 알아볼 것이다." }, { "title": "Convex Set (2)", "url": "/posts/Convex-Set-(2)/", "categories": "볼록최적화입문, Chapter 2", "tags": "Convex Optimization", "date": "2024-03-16 00:00:00 +0900", "snippet": "벡터의 비교일반적으로 벡터끼리는 부등호를 통해 비교할 수 없다. 그러나, 성분끼리 비교하여 모두 특정한 조건이 성립한다면 부등호를 이용할 수 있도록 할 것이다.\\(x \\leq y \\iff \\forall_{1\\leq i\\leq n} \\; (x_i \\leq y_i)\\)단, 하나의 성분이라도 조건을 만족하지 않는다면 부등호를 통해 비교할 수 없다.Posit...", "content": "벡터의 비교일반적으로 벡터끼리는 부등호를 통해 비교할 수 없다. 그러나, 성분끼리 비교하여 모두 특정한 조건이 성립한다면 부등호를 이용할 수 있도록 할 것이다.\\(x \\leq y \\iff \\forall_{1\\leq i\\leq n} \\; (x_i \\leq y_i)\\)단, 하나의 성분이라도 조건을 만족하지 않는다면 부등호를 통해 비교할 수 없다.Positive Definite Matrices벡터와 마찬가지로 행렬도 특별한 방법을 이용하여 부호를 따질 수 있다.대칭 행렬 $A \\in \\mathcal{S}^{n}$와 벡터 $x \\in \\mathbb{R}^n$가 있을 때, $x^TAx &gt; 0$를 만족한다면 이 행렬을 Positvie Definite Matrix라고 한다 (단, $x \\neq 0$). 만약, $x^TAx \\geq 0$라면 Positive Semi-Definite Matrix라고 한다.다만, 일반적인 부등호를 사용하면 혼동이 생길 수 있으므로, 어떤 행렬이 PD라면 $A \\succ 0$로 표현한다.Polyhedra다면체 (Polyhedra)는 유한한 선형 부등식과 방정식의 해집합이다.\\(\\mathcal{P}=\\{x \\; \\vert \\; Ax \\leq b, \\; Cx=d\\}\\qquadA \\in \\mathbb{R}^{m\\times n}, \\;C\\in \\mathbb{R}^{k\\times n}\\)이 때, 부등식은 반공간, 방정식은 초평면의 정의에 해당하므로, 다면체는 반공간과 초평면의 교집합으로 볼 수 있다.Seperating Hyperplane theroem두 개의 서로소인 Convex Set이 있다면, 집합을 가르는 Hyperplane이 항상 존재한다.Figure 1. Hyperplane이 두 Convex Set을 나눈다.직관적으로 생각해 봤을 때, 두 집합이 볼록하기 때문에 당연히 나눌 수 있다는 건 떠올리기 쉽다. 이제 귀류법을 통해 수학적으로 증명해 볼 것이다.우선, 두 가지 조건이 필요하다. 두 집합을 잇는 최소 길이의 선분 $\\overline{cd}$ \\선분의 중심에 수직인 Hyperplane만약, 이 평면이 두 집합을 이분하지 못 한다면, 공간 어딘가에서 집합 $D$와의 교점 $d’$이 존재할 것이다. 그러면, 선분 $\\overline{dd’}$ 위 모든 점 또한 집합 $D$에 속한다. Figure 2. Hyperplane이 집합을 이분하지 않는 경우여기서 모순이 발생한다. 세 점 $c, d, d’$가 예각삼각형을 이루므로 두 집합을 잇는 더 짧은 선분을 구할 수 있다. 1번 조건을 위반하기 때문에 가정은 성립하지 않는다.Supporting Hyperplane theorem어떤 Convex Set은 항상 경계면에서 그은 Halfspace 영역 안에 포함된다. Figure 3. Non-Convex Set에서 Supporting Hyperplane을 그린 모습이다.Convexity Preserving OperationsIn this section, We’ll describe some of the operations that preserve the convexity of sets.IntersectionsConvexity is preserved under the intersections. If an infinite number of sets $S_i$ are all convex, then $\\bigcap_{i=1}^{n} S_i$ is also convex.Affine functionsIf $S \\subseteq \\mathbb{R}^n$is convex, $a \\in \\mathbb{R}$, and $b \\in \\mathbb{R}^n$, then the set $aS + b$is convex.\\(aS + b = \\{ ax + b \\; | \\; x \\in S\\}\\)Minkowski AdditionMinkowski addition is one way to append two sets.\\(A \\oplus B \\equiv\\{ x+y \\; | \\; x \\in A, \\; y \\in B\\}\\)It also preserves the convexity of the sets.이 연산이 중요한 이유는 연산이 성립하기만 하면 따로 볼록 집합임을 증명하지 않아도 되기 때문이다. 이제는 Convex Set (Halfspace와 Hyperplane)의 교집합인 다면체 (Polyhedra)는 따로 증명하지 않아도 Convex Set임을 알 수 있다.Convex, Affine, Cone, 그리고 Subspaces앞서 정의한 집합을 보면 어느 공간이 더 큰 지 혼동하는 경우가 많다. 집합의 제약 조건이 더 많아 더 작은 공간이라고 착각하기 쉬운데, 사실은 그 반대다.Figure 4. 네 집합의 관계를 나타낸 그림이다.그림을 보면 알 수 있듯이, 볼록 집합의 공간이 가장 크다. 그 이유는 볼록 집합을 정의할 때 가장 엄격한 조건을 달아주었기 때문이다.정리이번 장에서는 최적화의 기본이 되는 볼록 집합에 대해서 알아보았다. 선형 결합에서 시작하여, 직선, 그리고 선분을 거쳐 볼록 집합을 정의하였다. 다음 장에서는 이제 본격적으로 함수에 대해서 다뤄볼 것이다." }, { "title": "Convex Set (1)", "url": "/posts/Convex-Set-(1)/", "categories": "볼록최적화입문, Chapter 2", "tags": "Convex Optimization", "date": "2024-03-16 00:00:00 +0900", "snippet": "Convex 집합은 임의의 두 점을 꺼내 선분을 그었을 때 선분 위에 존재하는 모든 점을 포함하는 집합을 말한다. Convex 집합이 중요한 이유는 볼록 최적화를 이해하는데 기본이 되는 개념이기 때문이다. 우선 기초가 되는 Affine 집합부터 알아보자.Affine Set집합 $\\mathcal{A}\\in R^n$에 속한 두 점 $x_1, \\; x_2$...", "content": "Convex 집합은 임의의 두 점을 꺼내 선분을 그었을 때 선분 위에 존재하는 모든 점을 포함하는 집합을 말한다. Convex 집합이 중요한 이유는 볼록 최적화를 이해하는데 기본이 되는 개념이기 때문이다. 우선 기초가 되는 Affine 집합부터 알아보자.Affine Set집합 $\\mathcal{A}\\in R^n$에 속한 두 점 $x_1, \\; x_2$를 꺼내 직선을 그었을 때 직선 위 모든 점이 이 집합에 속한다면 Affine 집합이다.\\[\\theta x_1 + (1-\\theta) x_2 \\in \\mathcal{A}\\]Affine CombinationAffine 결합은 계수의 합이 1인 특수한 선형 결합이다. 귀납법을 통해 Affine 집합은 항상 원소의 모든 Affine 결합을 포함한다는 결론을 얻을 수 있다.\\[\\theta_1 x_1+ \\theta_2 x_2+ \\cdots + \\theta_n x_n\\quad\\text{and}\\quad \\sum \\limits_{i=1}^n \\theta_i x_i = 1\\]예시 1모든 평면은 Affine Set에 속한다. 평면에서 임의의 두 점을 골라 직선을 만들면 직선 위 모든 점은 항상 평면에 속한다. 다만, 평면의 일부분은 Affine Set이 될 수 없다.Figure 1. 두 점을 잇는 직선이 매개변수를 통해 표현되었다.선형 방정식의 해집합도 Affine Set이다. 어떤 선형 방정식의 해집합 $S=\\{ x \\; | \\; Ax=b\\}$를 생각해 보자. $x_1, \\; x_2 \\in S$이고 $x_3=ax_1+(1-a)x_2$라 가정하자.\\[\\begin{align}Ax_3 \\quad &amp;= \\quad A\\cdot(ax_1+(1-a)\\cdot x_2) \\\\ \\quad &amp;= \\quad a\\cdot Ax_1+(1-a)\\cdot Ax_2 \\\\ \\quad &amp;= \\quad a\\cdot b+(1-a)\\cdot b \\\\ \\quad &amp;= \\quad b\\end{align}\\]따라서, 선형 방정식의 해집합도 Affine Set이다.Convex Set어떤 집합 $C \\in \\mathbb{R}^n$ 에 속한 두 점 $x_1, \\; x_2$ 를 잇는 선분을 그었을 때 선분 위 모든 점이 $C$에 다시 속하면 이 집합을 Convex Set이라 한다.\\[\\theta \\cdot x_1 + (1-\\theta) \\cdot x_2 \\in C \\qquad \\theta \\in [0, 1]\\]caption Figure 2. 첫 번째는 볼록 집합이다. 그러나, 나머지는 그렇지 않다. Convex Set을 구분하는 방법은 모든 면이 바깥으로 볼록한 지 확인하는 것이다. 두 번째 집합은 오목하게 들어간 부분에서 정의를 위반하고, 세 번째 집합은 불연속인 부분에서 정의를 위반하는 예시를 찾을 수 있다.Convex CombinationConvex Combination\\(x=\\theta_1 x_1+\\theta_2 x_2+ \\cdots + \\theta_n x_n \\quad \\text{where} \\quad \\theta_i\\in \\mathbb{R}\\)Convex Hull볼록 껍질 (Convex Hull)은 다음과 같이 정의한다.\\(\\text{conv} \\; C = \\{\\theta_1x_1+\\cdots \\theta_kx_k \\; | \\; x_i \\in C, \\; \\theta_1 + \\cdots + \\theta_k = 1\\}\\)Convex Hull은 어떤 집합의 모든 점을 볼록 조합한 것들의 집합이다.Convex Hull은 어떤 집합의 모든 점을 포함하는 Convex Set 중 가장 작은 것에 해당한다.만약, 어떤 집합 S가 Convex Set이라면 Convex Hull 은 자기 자신이 된다. Figure 3. 두 영역은 원래 볼록 집합이 아닌 것을 볼록 집합으로 만든 것이다. " } ]